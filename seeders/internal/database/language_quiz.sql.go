// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: language_quiz.sql

package database

import (
	"context"
	"strings"
)

const deleteLanguageQuiz = `-- name: DeleteLanguageQuiz :exec
DELETE FROM language_quiz
WHERE id IN (/*SLICE:ids*/?)
`

func (q *Queries) DeleteLanguageQuiz(ctx context.Context, ids []string) error {
	query := deleteLanguageQuiz
	var queryParams []interface{}
	if len(ids) > 0 {
		for _, v := range ids {
			queryParams = append(queryParams, v)
		}
		query = strings.Replace(query, "/*SLICE:ids*/?", strings.Repeat(",?", len(ids))[1:], 1)
	} else {
		query = strings.Replace(query, "/*SLICE:ids*/?", "NULL", 1)
	}
	_, err := q.db.ExecContext(ctx, query, queryParams...)
	return err
}

const seedLanguageQuiz = `-- name: SeedLanguageQuiz :exec
INSERT INTO language_quiz
(id, language_id, quiz_id) VALUES
(?, ?, ?)
`

type SeedLanguageQuizParams struct {
	ID         string
	LanguageID int32
	QuizID     string
}

func (q *Queries) SeedLanguageQuiz(ctx context.Context, arg SeedLanguageQuizParams) error {
	_, err := q.db.ExecContext(ctx, seedLanguageQuiz, arg.ID, arg.LanguageID, arg.QuizID)
	return err
}
