// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: languages.sql

package database

import (
	"context"
	"strings"
)

const deleteLanguages = `-- name: DeleteLanguages :exec
DELETE FROM language
WHERE id IN (/*SLICE:ids*/?)
`

func (q *Queries) DeleteLanguages(ctx context.Context, ids []int32) error {
	query := deleteLanguages
	var queryParams []interface{}
	if len(ids) > 0 {
		for _, v := range ids {
			queryParams = append(queryParams, v)
		}
		query = strings.Replace(query, "/*SLICE:ids*/?", strings.Repeat(",?", len(ids))[1:], 1)
	} else {
		query = strings.Replace(query, "/*SLICE:ids*/?", "NULL", 1)
	}
	_, err := q.db.ExecContext(ctx, query, queryParams...)
	return err
}

const seedLanguage = `-- name: SeedLanguage :exec
INSERT INTO language
(id, name, version) VALUES
(?, ?, ?)
`

type SeedLanguageParams struct {
	ID      int32
	Name    string
	Version int32
}

func (q *Queries) SeedLanguage(ctx context.Context, arg SeedLanguageParams) error {
	_, err := q.db.ExecContext(ctx, seedLanguage, arg.ID, arg.Name, arg.Version)
	return err
}
