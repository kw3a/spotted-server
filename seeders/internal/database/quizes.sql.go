// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: quizes.sql

package database

import (
	"context"
	"strings"
)

const deleteQuizes = `-- name: DeleteQuizes :exec
DELETE FROM quiz
WHERE id IN (/*SLICE:ids*/?)
`

func (q *Queries) DeleteQuizes(ctx context.Context, ids []string) error {
	query := deleteQuizes
	var queryParams []interface{}
	if len(ids) > 0 {
		for _, v := range ids {
			queryParams = append(queryParams, v)
		}
		query = strings.Replace(query, "/*SLICE:ids*/?", strings.Repeat(",?", len(ids))[1:], 1)
	} else {
		query = strings.Replace(query, "/*SLICE:ids*/?", "NULL", 1)
	}
	_, err := q.db.ExecContext(ctx, query, queryParams...)
	return err
}

const seedQuiz = `-- name: SeedQuiz :exec
INSERT INTO quiz 
(id, title, description, duration, min_wage, max_wage, user_id) VALUES
(?, ?, ?, ?, ?, ?, ?)
`

type SeedQuizParams struct {
	ID          string
	Title       string
	Description string
	Duration    int32
	MinWage     int32
	MaxWage     int32
	UserID      string
}

func (q *Queries) SeedQuiz(ctx context.Context, arg SeedQuizParams) error {
	_, err := q.db.ExecContext(ctx, seedQuiz,
		arg.ID,
		arg.Title,
		arg.Description,
		arg.Duration,
		arg.MinWage,
		arg.MaxWage,
		arg.UserID,
	)
	return err
}
