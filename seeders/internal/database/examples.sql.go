// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: examples.sql

package database

import (
	"context"
	"strings"
)

const deleteExamples = `-- name: DeleteExamples :exec
DELETE FROM example
WHERE id IN (/*SLICE:ids*/?)
`

func (q *Queries) DeleteExamples(ctx context.Context, ids []string) error {
	query := deleteExamples
	var queryParams []interface{}
	if len(ids) > 0 {
		for _, v := range ids {
			queryParams = append(queryParams, v)
		}
		query = strings.Replace(query, "/*SLICE:ids*/?", strings.Repeat(",?", len(ids))[1:], 1)
	} else {
		query = strings.Replace(query, "/*SLICE:ids*/?", "NULL", 1)
	}
	_, err := q.db.ExecContext(ctx, query, queryParams...)
	return err
}

const seedExample = `-- name: SeedExample :exec
INSERT INTO example 
(id, input, output, problem_id) VALUES
(?, ?, ?, ?)
`

type SeedExampleParams struct {
	ID        string
	Input     string
	Output    string
	ProblemID string
}

func (q *Queries) SeedExample(ctx context.Context, arg SeedExampleParams) error {
	_, err := q.db.ExecContext(ctx, seedExample,
		arg.ID,
		arg.Input,
		arg.Output,
		arg.ProblemID,
	)
	return err
}
