// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: quizes.sql

package database

import (
	"context"
)

const getQuizByOffer = `-- name: GetQuizByOffer :one
SELECT quiz.id, quiz.created_at, quiz.updated_at, quiz.duration, quiz.offer_id
FROM quiz
WHERE quiz.offer_id = ?
`

func (q *Queries) GetQuizByOffer(ctx context.Context, offerID string) (Quiz, error) {
	row := q.db.QueryRowContext(ctx, getQuizByOffer, offerID)
	var i Quiz
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Duration,
		&i.OfferID,
	)
	return i, err
}

const insertQuiz = `-- name: InsertQuiz :exec
INSERT INTO quiz (id, duration, offer_id)
VALUES (?, ?, ?)
`

type InsertQuizParams struct {
	ID       string
	Duration int32
	OfferID  string
}

func (q *Queries) InsertQuiz(ctx context.Context, arg InsertQuizParams) error {
	_, err := q.db.ExecContext(ctx, insertQuiz, arg.ID, arg.Duration, arg.OfferID)
	return err
}
