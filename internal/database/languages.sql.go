// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: languages.sql

package database

import (
	"context"
)

const selectLanguages = `-- name: SelectLanguages :many
SELECT language.id, language.name, language.version
FROM language
INNER JOIN language_quiz ON language.id = language_quiz.language_id
INNER JOIN quiz ON language_quiz.quiz_id = quiz.id
WHERE quiz.id = ?
`

func (q *Queries) SelectLanguages(ctx context.Context, id string) ([]Language, error) {
	rows, err := q.db.QueryContext(ctx, selectLanguages, id)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Language
	for rows.Next() {
		var i Language
		if err := rows.Scan(&i.ID, &i.Name, &i.Version); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
